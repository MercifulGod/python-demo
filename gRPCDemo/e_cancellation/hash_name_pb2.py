# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: hash_name.proto

from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='hash_name.proto',
  package='hash_name',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x0fhash_name.proto\x12\thash_name\"m\n\x0fHashNameRequest\x12\x14\n\x0c\x64\x65sired_name\x18\x01 \x01(\t\x12\x1e\n\x16ideal_hamming_distance\x18\x02 \x01(\x05\x12$\n\x1cinteresting_hamming_distance\x18\x03 \x01(\x05\"Q\n\x10HashNameResponse\x12\x0e\n\x06secret\x18\x01 \x01(\t\x12\x13\n\x0bhashed_name\x18\x02 \x01(\t\x12\x18\n\x10hamming_distance\x18\x03 \x01(\x05\x32\x99\x01\n\nHashFinder\x12\x41\n\x04\x46ind\x12\x1a.hash_name.HashNameRequest\x1a\x1b.hash_name.HashNameResponse\"\x00\x12H\n\tFindRange\x12\x1a.hash_name.HashNameRequest\x1a\x1b.hash_name.HashNameResponse\"\x00\x30\x01\x62\x06proto3'
)




_HASHNAMEREQUEST = _descriptor.Descriptor(
  name='HashNameRequest',
  full_name='hash_name.HashNameRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='desired_name', full_name='hash_name.HashNameRequest.desired_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='ideal_hamming_distance', full_name='hash_name.HashNameRequest.ideal_hamming_distance', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='interesting_hamming_distance', full_name='hash_name.HashNameRequest.interesting_hamming_distance', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=30,
  serialized_end=139,
)


_HASHNAMERESPONSE = _descriptor.Descriptor(
  name='HashNameResponse',
  full_name='hash_name.HashNameResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='secret', full_name='hash_name.HashNameResponse.secret', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='hashed_name', full_name='hash_name.HashNameResponse.hashed_name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='hamming_distance', full_name='hash_name.HashNameResponse.hamming_distance', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=141,
  serialized_end=222,
)

DESCRIPTOR.message_types_by_name['HashNameRequest'] = _HASHNAMEREQUEST
DESCRIPTOR.message_types_by_name['HashNameResponse'] = _HASHNAMERESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

HashNameRequest = _reflection.GeneratedProtocolMessageType('HashNameRequest', (_message.Message,), {
  'DESCRIPTOR' : _HASHNAMEREQUEST,
  '__module__' : 'hash_name_pb2'
  # @@protoc_insertion_point(class_scope:hash_name.HashNameRequest)
  })
_sym_db.RegisterMessage(HashNameRequest)

HashNameResponse = _reflection.GeneratedProtocolMessageType('HashNameResponse', (_message.Message,), {
  'DESCRIPTOR' : _HASHNAMERESPONSE,
  '__module__' : 'hash_name_pb2'
  # @@protoc_insertion_point(class_scope:hash_name.HashNameResponse)
  })
_sym_db.RegisterMessage(HashNameResponse)



_HASHFINDER = _descriptor.ServiceDescriptor(
  name='HashFinder',
  full_name='hash_name.HashFinder',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=225,
  serialized_end=378,
  methods=[
  _descriptor.MethodDescriptor(
    name='Find',
    full_name='hash_name.HashFinder.Find',
    index=0,
    containing_service=None,
    input_type=_HASHNAMEREQUEST,
    output_type=_HASHNAMERESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='FindRange',
    full_name='hash_name.HashFinder.FindRange',
    index=1,
    containing_service=None,
    input_type=_HASHNAMEREQUEST,
    output_type=_HASHNAMERESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_HASHFINDER)

DESCRIPTOR.services_by_name['HashFinder'] = _HASHFINDER

# @@protoc_insertion_point(module_scope)
